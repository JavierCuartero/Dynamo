{
  "Uuid": "62b86939-375e-4b95-9187-e4394774c69a",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Dyn_00_07_Working with Excel",
  "ElementResolver": {
    "ResolutionMap": {
      "Category": {
        "Key": "Revit.Elements.Category",
        "Value": "RevitNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "List.Join": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "String.ToNumber": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "Element": {
        "Key": "Revit.Elements.Element",
        "Value": "RevitNodes.dll"
      },
      "List.Map": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "List.Rep": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "cat = Category.ByName(\"Rooms\");\nElementQueries.OfCategory(cat);",
      "Id": "4f5f30c47cf14f7881f5473a48296017",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0f6619dd16564d959b4052443dd57654",
          "Name": "",
          "Description": "cat",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "308954a71efe4185bfd0619e3209d4bd",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "d9c4651167a944e090afe95683ab4c09",
      "Inputs": [
        {
          "Id": "c5e6003f5fcf4d7eb7ebac06a28e027a",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25c858ad2098461ab35f861d6112870e",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "0025ba9732fd4f54944fef01d977a384",
      "Inputs": [
        {
          "Id": "f2c56d4182234e86987834a9642b2684",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00720ca29ed441cb94bfa67d0e34b915",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "78a6f4374c554425b1ff8ba7c53cf6ac",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f07d02249cde4c2ebf1c2bd8cca7a725",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "340afd5e949a44dbb596a71d74865b25",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a4aa55a0408b45b480f38673059a144d",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "56fef41d054a49d49300d8eb648eefb8",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f25335da4a3a4eb8b15a2f3e2c9a1697",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "d6585e237b33456a99f11479561ff9e6",
      "Inputs": [
        {
          "Id": "71763141981946e391cd796cdb59fac9",
          "Name": "file",
          "Description": "File representing the Excel workbook\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "006e362cffeb4565936290250c9b0c23",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b764e11638fd42f8a952cd0758365058",
          "Name": "readAsStrings",
          "Description": "Toggle to read cells as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e81866cb1a44191b2f06627c9045098",
          "Name": "showExcel",
          "Description": "Toggle to show excel's main window\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ef4771db3f3042b7ac84cc5bfebb9141",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Id",
      "Id": "6f9f224f01204cbbacd5e17949bd1ec8",
      "Inputs": [
        {
          "Id": "8a729b6720ed45f7a2b70bfe997f9941",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9678c8f7121241458fba6b97a9b42d78",
          "Name": "int",
          "Description": "int",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Element Id for this element\n\nElement.Id: int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "08f6618e31bf43418c68ab2c32dbb69f",
      "Inputs": [
        {
          "Id": "5fa760652f854c60a739ea46c59a4683",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b6ffecc9cb954f9893d3ae7f7593f132",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "47f30a547acf474ea5b6878a13ab98fe",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"Name\",\n\"Number\",\n\"Unbounded Height\",\n\"Department\",\n\"Base Finish\",\n\"Ceiling Finish\",\n\"Wall Finish\",\n\"Floor Finish\"];",
      "Id": "ab73b42d4dcd452cb7c3654cbed516bf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "285a3255bc354bc998797e694919f3bf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "aa6ca9a3da54421c8e76b49824c0afe9",
      "Inputs": [
        {
          "Id": "9464829016414156ae15e7a4e911fb84",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91015452a79f4b5eb29b31dfdd2b2ead",
          "Name": "function",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bae34cce3f024a3a95694942eab4a70d",
          "Name": "list",
          "Description": "Mapped list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "ae0249df912243639e9d7c6ef0d2331e",
      "Inputs": [
        {
          "Id": "03e430e4d26d43349ed27c2e0b931c64",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "351eaed4dac6417fa47dc8846b888efb",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "667981e05b50458b84707f43c6c7879c",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "daedf441a60a48628b7b8521fe5ba55f",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either the True or False input depending on what boolean value is toggled in the test input."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\";",
      "Id": "337f8b58310d45a0913e4df28e915a33",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8dcdb2f4ab3a4c6dbcbb08204f11303a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "4d80950deae44f6e818e5e7a817990f4",
      "Inputs": [
        {
          "Id": "50564b60608349f5bdae7c7e051261f9",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "760d812d0a1c47969015f19de557bae0",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31e2edd1be764b59b04941c20da3e365",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "0ab55804cd5f4515bd4e8a83b7abd260",
      "Inputs": [
        {
          "Id": "c2699cb3cc1f4201b05cb803d98784ec",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2819853be9924db9a8824a10166bae0d",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "44ae243266ae4fe18831777d9af5e9da",
      "Inputs": [
        {
          "Id": "549af2ec5a6847aaa433d08c4d24088b",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fb4a0f4f37046cbb81f1a21efc204ef",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "ef8b98a071bc4a709c33fbd6beda8590",
      "Inputs": [
        {
          "Id": "8739b58caeff4aa98536e73e5a133742",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e2d44fd49ac04368a40145b4d639e288",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f57d61fc69d4451d8d38ee4d227b6ee4",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "91992b58f09346d39a4ab9b00af51c1e",
      "Inputs": [
        {
          "Id": "a6cd7f9906b54d489f94b3893b285392",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8dc2092d839b4be49c050d442f86ad8c",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "c6b72fc202df40e7a5586c21d02eb717",
      "Inputs": [
        {
          "Id": "be8d7a85207244898062b65b15e73394",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "37a7d7d67ee8439b899e455299d8c3b4",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b667af5b96394ec8b4feb58b5fab4d89",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "ID",
      "Id": "c847e759607d46a9813261939d71745c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2854f991547c41ecb648958e559b72b7",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "7c6ec32ddb324d058aa8373c927df320",
      "Inputs": [
        {
          "Id": "3bcff8761b6a421aa577cdc848d647e5",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "80cae1b14df0416789212fd45311c42d",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3e2592ac85647819d9e1f343d6711fe",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\Javier\\Desktop\\New Microsoft Excel Worksheet.xlsx",
      "InputValue": "..\\..\\Desktop\\New Microsoft Excel Worksheet.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "fd19fde774b746f0bda50958ef12c66f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1b77d784befc41d698436f430cac7650",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Sheet1\";\n0;\ntrue;\nfalse;",
      "Id": "7d9ae77b5c9d45afaadeb61f671e5bdc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1190a90d8e7c498d987564479f2206f5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0bbe89a5dbda408f95f109d36a50f338",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a4ea09b9bcd2404d9263855dfc07052a",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "482cda717f8f435da37b002f0151e9c1",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "6f9cacfd0c044b2786605662f9810f85",
      "Inputs": [
        {
          "Id": "35828088e69644328b11e9b01b681c74",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a343a0756240497aa9f22d28d907334a",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "76556636873c445cad4fb7cbd43cf14a",
      "Inputs": [
        {
          "Id": "03798d9749dd404199cf76f2c9005fcc",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a80605e818e4b7d9996bd36cd94f3f2",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "1b840986f039487482b0a3fa7090aafc",
      "Inputs": [
        {
          "Id": "deb8976c9c9b43a4a02a33d6eb02c4cd",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "2ba73649cb544f8bb31c381b523d49b1",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5627cf7c13594af19f7ddc93c6540668",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "f7d86f37fd8f443aab3ad52cde0582ba",
      "Inputs": [
        {
          "Id": "ca44da61c6e844dd815c8cc3dde39546",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b693b5fdee554b89b607a7aec6851621",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75a80f99b4dd4543803dad01740b1ba0",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "099086cd6a4041d580933affdeca1001",
      "Inputs": [
        {
          "Id": "5549723c4aad46e2bbba772881e24ffb",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "283c329a4e88422da60f0b9b8119a294",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "b0812fb202294695b97e3d3dfb6beec4",
      "Inputs": [
        {
          "Id": "a5997d31d20345a19eb0df879bfe82db",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24c99a6c32f445509bb9f3e53c029e10",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b05d9d3c5aa456cbce483d586760c01",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "2ffca105948a472aaf3e84627a61a157",
      "Inputs": [
        {
          "Id": "ea3fa48d1a194a36bf8448941627dfe3",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f35088d9b7f34438ad8f2ce640b9f4cf",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61c0d6e42bc148fdab18c9e6e5aa1bec",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b27344afdb947e8970a4bc9620f0305",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "b18def8bb4114a698d1e8f9e6f24736d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "93398a7fca9c47e4a043e5c83245c36e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "ID = x[0];\nname = x[1];\nnumber = x[2];\nh = String.ToNumber(x[3]);\n\n[name, number, h];",
      "Id": "5856b7f28bdc4c34bb1de24b5839ed87",
      "Inputs": [
        {
          "Id": "0e0e0363ac89429fa3234b021cbd6006",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "56bb12b07ed24fd297ffb1ea4468ba4d",
          "Name": "",
          "Description": "ID",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4770cec556a4be5b25d0881165ac5c1",
          "Name": "",
          "Description": "name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4d98f1a24fc4f59873fd0030ed29d48",
          "Name": "",
          "Description": "number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "62d15ee174644a97b3edd0a1d10c03f1",
          "Name": "",
          "Description": "h",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7eb2980f297845fb9445992989d90a14",
          "Name": "",
          "Description": "Value of expression at line 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Combine, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "def7f65895a44dd681eb7e471a72debb",
      "Inputs": [
        {
          "Id": "fe99b849b6134b1ba97e8d7441632c1a",
          "Name": "combineFunction",
          "Description": "Function to use as combinator",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61bc73038396420b872d5b13a1988ad4",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca4ee5a105274856b1db221fdf0cc8e5",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "24fcaaab61124a95b3547fd9f621601f",
          "Name": "list",
          "Description": "Combined lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a combinator to each element in two sequences"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "p1 = \"Name\";\np2 = \"Number\";\np3 = \"Limit Offset\";\n\n[p1,p2,p3];",
      "Id": "3c2bb97c2f3f41e593e5c9c160bd6ffb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9cc2f751f33b4e39abd36f65b3b1fc11",
          "Name": "",
          "Description": "p1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb05cda7c6424d599c4837095aeff1ed",
          "Name": "",
          "Description": "p2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5e10369aacb424eabb78cf43cfcbffb",
          "Name": "",
          "Description": "p3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d9413a3ebd954554b17e7f8881ce8954",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Parameters",
      "Id": "08026ad802e84d49988cfcff7aa94426",
      "Inputs": [
        {
          "Id": "b9cdab8029794bd4a1465c105a7d4fd1",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3319947bb66d4dd38da80cc0ae965e3f",
          "Name": "Parameter[]",
          "Description": "Parameter[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain all of the Parameters from an Element, sorted by Name.\n\nElement.Parameters: Parameter[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "cat = Category.ByName(\"Rooms\");\nElementQueries.OfCategory(cat);",
      "Id": "0737fd5c32804afe8ec22a56251a693b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "21219f53ac9840c6a9734d9ccbb2d535",
          "Name": "",
          "Description": "cat",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d9069f2415a4d87bf25cb42fe582b2e",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "// Getting ElementID\nid = e.Id;\n\n// Define which parameters will be used for Data extraction\nparam = [\"Name\",\"Number\",\"Limit Offset\",\"Department\",\n\"Base Finish\",\"Ceiling Finish\",\"Wall Finish\",\"Floor Finish\"];\n\n// Get Parameter Data from elements\nvalues = Element.GetParameterValueByName(e,param<1>);\n\n// Add IDs to the Dataset\nadd_1 = List.AddItemToFront(id,values);\n\n// Add Parameter names (headers) for Excel\nadd_2 = List.AddItemToFront(param, List.Transpose(add_1));",
      "Id": "cd8a951e723f45a09a3f30ba51a89b3d",
      "Inputs": [
        {
          "Id": "6868590f8d5d478ab22c0342b6b0680e",
          "Name": "e",
          "Description": "e",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ce504d302a654d91b56dc8c005d1a65b",
          "Name": "",
          "Description": "id",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d76d99e0d3f94d0fa68dfa1a45db81c6",
          "Name": "",
          "Description": "param",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9cc892da35e49ee96a619f6fcdd6856",
          "Name": "",
          "Description": "values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "680cd86bca9c4f55a99d56a13a3ca1d6",
          "Name": "",
          "Description": "add_1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52870676f8d24435855ab5406ecab48a",
          "Name": "",
          "Description": "add_2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "$$",
      "Id": "ed7a88451e3e4bec883164cead104ed2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8c062d7b7ae2469b94eb168fdd361155",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "db19e68b2fa74235befb27538dd8f212",
      "Inputs": [
        {
          "Id": "0edc62d214e1428f96b37d45fcbc4552",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "212dc3cf02ca43e3b7db1a8caea2fe63",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19bafa8f21ab4053832ad93480ce5dc3",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "41f4f42bcba4420393862386205cc590",
      "Inputs": [
        {
          "Id": "9948a1d2525245a4aa53a42336117d48",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74c4857e2ff7479b9511a1599fc0b107",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9cf6407c0d58477086eb4ebedf5efb87",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8af18716951e49dd995d8b7ff298a034",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "60ce59718461450aa219ec1c80b7c71c",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4df42c4584049578d70d46afeded156",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5fb19b1b2644f8ca60d3c2cfb942c53",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "94aaad7a78844c95bfc076cd56472f95",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Sheet1\";\n0;\ntrue;\nfalse;",
      "Id": "0b943a6916254375b40da77c2cf8eff2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0d4ff3c88c734bf3878834bd6e27d8cd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2760932dd67f4c7088daadf9ebdee2ac",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d493e053a330486f977653f109aa55bc",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "887cb31629654b04ba05ee7ec946c67b",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\Javier\\Desktop\\New Microsoft Excel Worksheet.xlsx",
      "InputValue": "..\\..\\Desktop\\New Microsoft Excel Worksheet.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "3e86a867d11d47ddb16d8dcd3db2f422",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2b22f798feeb456390fa3defe775cf75",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "ed6e410e6ade4cecaddf351e6f7890f6",
      "Inputs": [
        {
          "Id": "06e0a5d4c79f439ba64296a612167688",
          "Name": "file",
          "Description": "File representing the Excel workbook\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7ff035df351f49c88bedf21bb367b83b",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5dc22755da754bfcaaee8682c5b89c3d",
          "Name": "readAsStrings",
          "Description": "Toggle to read cells as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb31284271a4404e906e091a212fc76d",
          "Name": "showExcel",
          "Description": "Toggle to show excel's main window\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "774ca41ea766448ebda926cef652f9ef",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "f170fa64eeb34ecd91d1acf19a205954",
      "Inputs": [
        {
          "Id": "349c754b27494a2e9eb42cf70770f93a",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "beadb506127c4d068bfaad20ae1d15e5",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "//Getting rooms from Collector\nroom_collector;\nroom_id = (room_collector.Id);\nroom_id_str = room_id + \"\";\n\n// Getting Excel Data and Split it\nparam_names = input[0];\nother_values = List.DropItems(input,1);\nexcel_data = List.Transpose(other_values);\n\n// Split the Values\nID = excel_data[0];\nname = excel_data[1];\nnumber = excel_data[2];\nlimit = String.ToNumber(excel_data[3]);\ndepartment = excel_data[4];\n\nparam_values = [name,number,limit,department];\n\n// Compare Excel Room IDs with Revit IDs\nrooms_in_excel = List.IndexOf(room_id_str, ID);\nrooms = List.GetItemAtIndex(room_collector, rooms_in_excel);\n\n//Set the parameters values\nElement.SetParameterByName(rooms, param_names,param_values);",
      "Id": "a44d971d54fb4f0f9d7eb2e195947f88",
      "Inputs": [
        {
          "Id": "ac5ba48f4fa649ba999ecdda20096352",
          "Name": "room_collector",
          "Description": "room_collector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d188ba0aef0a44dba1366f594cbb4d73",
          "Name": "input",
          "Description": "input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e0ac9169cf5c431083049d7a774e29b0",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "68ef98fdbab141c4bd995442840ba696",
          "Name": "",
          "Description": "room_id",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bfa3eb111445498ab7b1943cfabf1740",
          "Name": "",
          "Description": "room_id_str",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1770ac9258e240098a380e0926391df2",
          "Name": "",
          "Description": "param_names",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48edc78b05df43259d2789178ad02a97",
          "Name": "",
          "Description": "other_values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08ae1828579d41dfa0e58e24937ec15f",
          "Name": "",
          "Description": "excel_data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f88b2bb35b64fd9a310188b97780a6a",
          "Name": "",
          "Description": "ID",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06ecbb482b27424f8761cc15bc29b366",
          "Name": "",
          "Description": "name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "39a4ab3e6de545c09bdf2f6f31711cae",
          "Name": "",
          "Description": "number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c22213e28c7b405d8e2df59e1dd655ab",
          "Name": "",
          "Description": "limit",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed7fa808924344b3a96520365c2b0064",
          "Name": "",
          "Description": "department",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "140f8b066b8841b7a6eab3cdc1717621",
          "Name": "",
          "Description": "param_values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aa28d263eddc46bc9a52aea60f09709e",
          "Name": "",
          "Description": "rooms_in_excel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0bf313bfded04c36801c3287608c31d2",
          "Name": "",
          "Description": "rooms",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a60de4aacbf48a28b8dd643380cc2bf",
          "Name": "",
          "Description": "Value of expression at line 25",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Strin;",
      "Id": "139d36d070374bc8bbeb403d3cc07746",
      "Inputs": [
        {
          "Id": "4f501b441f27471f89fafb8a485b3104",
          "Name": "Strin",
          "Description": "Strin",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5225fab9d6a54c3b97d144c004567c3b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "c5b5fdd9ae2442819b67c145137ab654",
      "Inputs": [
        {
          "Id": "235d3a39f1914ff8adec156c6b9bd690",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e38d39fa3bb43e2baf2411c2aa8a3f8",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    }
  ],
  "Connectors": [
    {
      "Start": "0f6619dd16564d959b4052443dd57654",
      "End": "c5e6003f5fcf4d7eb7ebac06a28e027a",
      "Id": "fc67d059b9604cf2ad3852c2d84b556c"
    },
    {
      "Start": "25c858ad2098461ab35f861d6112870e",
      "End": "8a729b6720ed45f7a2b70bfe997f9941",
      "Id": "c344a24339e74d7983e20b6177f179dd"
    },
    {
      "Start": "25c858ad2098461ab35f861d6112870e",
      "End": "9464829016414156ae15e7a4e911fb84",
      "Id": "9cf1ee824cc84f1298c79f59e829a47c"
    },
    {
      "Start": "25c858ad2098461ab35f861d6112870e",
      "End": "a5997d31d20345a19eb0df879bfe82db",
      "Id": "8ce0c02c83bf400d850bcea5d127bf41"
    },
    {
      "Start": "25c858ad2098461ab35f861d6112870e",
      "End": "b9cdab8029794bd4a1465c105a7d4fd1",
      "Id": "ebcfc6331dfe46048b8dab8b5df665e6"
    },
    {
      "Start": "ef4771db3f3042b7ac84cc5bfebb9141",
      "End": "03798d9749dd404199cf76f2c9005fcc",
      "Id": "fe7a816b699e4db09cb6f2928d12295a"
    },
    {
      "Start": "9678c8f7121241458fba6b97a9b42d78",
      "End": "8739b58caeff4aa98536e73e5a133742",
      "Id": "4362d857a1af4f0b9e8bf4420d72dec3"
    },
    {
      "Start": "9678c8f7121241458fba6b97a9b42d78",
      "End": "5549723c4aad46e2bbba772881e24ffb",
      "Id": "63603a8b86994501950b97fdc6d16096"
    },
    {
      "Start": "47f30a547acf474ea5b6878a13ab98fe",
      "End": "91015452a79f4b5eb29b31dfdd2b2ead",
      "Id": "c127b94a9886464d858f935c843cdc87"
    },
    {
      "Start": "285a3255bc354bc998797e694919f3bf",
      "End": "b6ffecc9cb954f9893d3ae7f7593f132",
      "Id": "d1f5d871560a42dfbfb83157f597b351"
    },
    {
      "Start": "285a3255bc354bc998797e694919f3bf",
      "End": "c2699cb3cc1f4201b05cb803d98784ec",
      "Id": "f9576ef95f1849a399b7a3644e8eda5b"
    },
    {
      "Start": "285a3255bc354bc998797e694919f3bf",
      "End": "37a7d7d67ee8439b899e455299d8c3b4",
      "Id": "8ab631b8ebd84984adb53f2ed34ed3fe"
    },
    {
      "Start": "bae34cce3f024a3a95694942eab4a70d",
      "End": "667981e05b50458b84707f43c6c7879c",
      "Id": "bdefd784de2c4b30b58c789bd66f13b3"
    },
    {
      "Start": "bae34cce3f024a3a95694942eab4a70d",
      "End": "0edc62d214e1428f96b37d45fcbc4552",
      "Id": "ada7c0fd9a134fe0bf1d6be59f25c99f"
    },
    {
      "Start": "daedf441a60a48628b7b8521fe5ba55f",
      "End": "50564b60608349f5bdae7c7e051261f9",
      "Id": "d0f6528699ab4afc81cbcea7f7b79f9e"
    },
    {
      "Start": "8dcdb2f4ab3a4c6dbcbb08204f11303a",
      "End": "212dc3cf02ca43e3b7db1a8caea2fe63",
      "Id": "9340982936894754bb553f52199a7fea"
    },
    {
      "Start": "31e2edd1be764b59b04941c20da3e365",
      "End": "549af2ec5a6847aaa433d08c4d24088b",
      "Id": "6866f9abfcd143d6b36e4034c1fcdbb2"
    },
    {
      "Start": "2819853be9924db9a8824a10166bae0d",
      "End": "760d812d0a1c47969015f19de557bae0",
      "Id": "5eb87eeb8cfc4a4cbee1348726f475ef"
    },
    {
      "Start": "6fb4a0f4f37046cbb81f1a21efc204ef",
      "End": "e2d44fd49ac04368a40145b4d639e288",
      "Id": "ce52a6c8c0c9490cbf73796c425bf226"
    },
    {
      "Start": "f57d61fc69d4451d8d38ee4d227b6ee4",
      "End": "a6cd7f9906b54d489f94b3893b285392",
      "Id": "288791402f814d4ca8efcf28acab7b14"
    },
    {
      "Start": "8dc2092d839b4be49c050d442f86ad8c",
      "End": "80cae1b14df0416789212fd45311c42d",
      "Id": "c7e391fe19d24f148ccbca77906a1caf"
    },
    {
      "Start": "b667af5b96394ec8b4feb58b5fab4d89",
      "End": "3bcff8761b6a421aa577cdc848d647e5",
      "Id": "5ff627c4f3c9483881e397363c4a75f6"
    },
    {
      "Start": "2854f991547c41ecb648958e559b72b7",
      "End": "be8d7a85207244898062b65b15e73394",
      "Id": "6cfe9c9721d8480d91d411a18fc7076e"
    },
    {
      "Start": "f3e2592ac85647819d9e1f343d6711fe",
      "End": "340afd5e949a44dbb596a71d74865b25",
      "Id": "08752fa1a15343369482a27c26d38d24"
    },
    {
      "Start": "1b77d784befc41d698436f430cac7650",
      "End": "f2c56d4182234e86987834a9642b2684",
      "Id": "45ac7005770442298fda6923a16ebe27"
    },
    {
      "Start": "1b77d784befc41d698436f430cac7650",
      "End": "35828088e69644328b11e9b01b681c74",
      "Id": "20956e6c1e5b47489d7067f9a5a230ce"
    },
    {
      "Start": "1190a90d8e7c498d987564479f2206f5",
      "End": "00720ca29ed441cb94bfa67d0e34b915",
      "Id": "75d7ea9561ce4ab996ded84364040212"
    },
    {
      "Start": "1190a90d8e7c498d987564479f2206f5",
      "End": "006e362cffeb4565936290250c9b0c23",
      "Id": "b6592a2ef40c4770a250ffe56b183307"
    },
    {
      "Start": "0bbe89a5dbda408f95f109d36a50f338",
      "End": "78a6f4374c554425b1ff8ba7c53cf6ac",
      "Id": "54aafa9576b045bb8093c1785baf5a80"
    },
    {
      "Start": "0bbe89a5dbda408f95f109d36a50f338",
      "End": "f07d02249cde4c2ebf1c2bd8cca7a725",
      "Id": "8c3e6385cfd140dd8e911d2f07526289"
    },
    {
      "Start": "a4ea09b9bcd2404d9263855dfc07052a",
      "End": "a4aa55a0408b45b480f38673059a144d",
      "Id": "e2c40d909d6b494b9bec38e20edfa3dc"
    },
    {
      "Start": "a4ea09b9bcd2404d9263855dfc07052a",
      "End": "56fef41d054a49d49300d8eb648eefb8",
      "Id": "a43b379310dc4c0994594e904be8ca8a"
    },
    {
      "Start": "a4ea09b9bcd2404d9263855dfc07052a",
      "End": "b764e11638fd42f8a952cd0758365058",
      "Id": "2805a2c18d7a4188ae79d46bcd8ad876"
    },
    {
      "Start": "482cda717f8f435da37b002f0151e9c1",
      "End": "2e81866cb1a44191b2f06627c9045098",
      "Id": "498e24ffb1c94c4cb8e89810aa2ab726"
    },
    {
      "Start": "a343a0756240497aa9f22d28d907334a",
      "End": "71763141981946e391cd796cdb59fac9",
      "Id": "a3776aba13a04863a8665dcabe5e03af"
    },
    {
      "Start": "9a80605e818e4b7d9996bd36cd94f3f2",
      "End": "deb8976c9c9b43a4a02a33d6eb02c4cd",
      "Id": "f4dbdf05e17e416fb0edca0b8a6e554e"
    },
    {
      "Start": "5627cf7c13594af19f7ddc93c6540668",
      "End": "0e0e0363ac89429fa3234b021cbd6006",
      "Id": "d2006b8d39ae4c29a6976ac752c10fab"
    },
    {
      "Start": "75a80f99b4dd4543803dad01740b1ba0",
      "End": "24c99a6c32f445509bb9f3e53c029e10",
      "Id": "896f21fcc0814cca8c4091d4ec601e96"
    },
    {
      "Start": "283c329a4e88422da60f0b9b8119a294",
      "End": "ca44da61c6e844dd815c8cc3dde39546",
      "Id": "deb01d6066fe4a8cbfec2fe014ba813e"
    },
    {
      "Start": "1b05d9d3c5aa456cbce483d586760c01",
      "End": "ea3fa48d1a194a36bf8448941627dfe3",
      "Id": "a457638a5154439086b3ab1abf7240be"
    },
    {
      "Start": "1b27344afdb947e8970a4bc9620f0305",
      "End": "fe99b849b6134b1ba97e8d7441632c1a",
      "Id": "0387d4db161d4ab18487d1bf37e532e3"
    },
    {
      "Start": "93398a7fca9c47e4a043e5c83245c36e",
      "End": "2ba73649cb544f8bb31c381b523d49b1",
      "Id": "2365877c96c146dd81f96e4a8cf6ae0e"
    },
    {
      "Start": "56bb12b07ed24fd297ffb1ea4468ba4d",
      "End": "b693b5fdee554b89b607a7aec6851621",
      "Id": "15c2df71019d42d1b5173629882adab1"
    },
    {
      "Start": "7eb2980f297845fb9445992989d90a14",
      "End": "ca4ee5a105274856b1db221fdf0cc8e5",
      "Id": "7803e262d5b0470bb1e91688de766ec9"
    },
    {
      "Start": "d9413a3ebd954554b17e7f8881ce8954",
      "End": "61bc73038396420b872d5b13a1988ad4",
      "Id": "402f606993484161990c37ccfce0208a"
    },
    {
      "Start": "2d9069f2415a4d87bf25cb42fe582b2e",
      "End": "ac5ba48f4fa649ba999ecdda20096352",
      "Id": "388744901bdd4e618e8df09112272e58"
    },
    {
      "Start": "2d9069f2415a4d87bf25cb42fe582b2e",
      "End": "6868590f8d5d478ab22c0342b6b0680e",
      "Id": "98e617edf10d49d69bfb3fa0f7547d6f"
    },
    {
      "Start": "52870676f8d24435855ab5406ecab48a",
      "End": "60ce59718461450aa219ec1c80b7c71c",
      "Id": "dec5b21c25e14546ada9485fa3be025f"
    },
    {
      "Start": "8c062d7b7ae2469b94eb168fdd361155",
      "End": "351eaed4dac6417fa47dc8846b888efb",
      "Id": "2062f759b4e94be5934f551cdf362250"
    },
    {
      "Start": "19bafa8f21ab4053832ad93480ce5dc3",
      "End": "03e430e4d26d43349ed27c2e0b931c64",
      "Id": "f9e14908aa8c4854b1c514c5b1e7e084"
    },
    {
      "Start": "0d4ff3c88c734bf3878834bd6e27d8cd",
      "End": "74c4857e2ff7479b9511a1599fc0b107",
      "Id": "d978e59ada674260b817a18b6971d738"
    },
    {
      "Start": "0d4ff3c88c734bf3878834bd6e27d8cd",
      "End": "7ff035df351f49c88bedf21bb367b83b",
      "Id": "33ada97f92ea4eeeb1386f8ae4da0070"
    },
    {
      "Start": "2760932dd67f4c7088daadf9ebdee2ac",
      "End": "9cf6407c0d58477086eb4ebedf5efb87",
      "Id": "ca6ee4ae591f4b9f84b9e9b824075de2"
    },
    {
      "Start": "2760932dd67f4c7088daadf9ebdee2ac",
      "End": "8af18716951e49dd995d8b7ff298a034",
      "Id": "d7973f79dc4a4618b48a2619194f24f6"
    },
    {
      "Start": "d493e053a330486f977653f109aa55bc",
      "End": "e4df42c4584049578d70d46afeded156",
      "Id": "2ca921ef19e14c2e979648ddf0fbab0c"
    },
    {
      "Start": "d493e053a330486f977653f109aa55bc",
      "End": "5dc22755da754bfcaaee8682c5b89c3d",
      "Id": "ee29f6d7710f490ab4a06f46ff158e9e"
    },
    {
      "Start": "d493e053a330486f977653f109aa55bc",
      "End": "c5fb19b1b2644f8ca60d3c2cfb942c53",
      "Id": "ed9b048022064e7f9de9831f1d92164c"
    },
    {
      "Start": "887cb31629654b04ba05ee7ec946c67b",
      "End": "cb31284271a4404e906e091a212fc76d",
      "Id": "bf439ab6ce32497d9dfd6da455685c0b"
    },
    {
      "Start": "2b22f798feeb456390fa3defe775cf75",
      "End": "9948a1d2525245a4aa53a42336117d48",
      "Id": "7c7ecab47fa8496499b0de92ed47014d"
    },
    {
      "Start": "2b22f798feeb456390fa3defe775cf75",
      "End": "349c754b27494a2e9eb42cf70770f93a",
      "Id": "5dc88e9e4305481d85bde282bea0c6ef"
    },
    {
      "Start": "774ca41ea766448ebda926cef652f9ef",
      "End": "d188ba0aef0a44dba1366f594cbb4d73",
      "Id": "d3bccb9fd76e404bb197e72e7db9e029"
    },
    {
      "Start": "beadb506127c4d068bfaad20ae1d15e5",
      "End": "06e0a5d4c79f439ba64296a612167688",
      "Id": "1475e7b79a7c4205a90064e7bd8122d3"
    },
    {
      "Start": "1770ac9258e240098a380e0926391df2",
      "End": "235d3a39f1914ff8adec156c6b9bd690",
      "Id": "b603146387dd405d833893268308b8c3"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.12",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "1.10",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.0.5650",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4f5f30c47cf14f7881f5473a48296017",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 299.45036735165843,
        "Y": 397.98352288463275
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Category",
        "Id": "d9c4651167a944e090afe95683ab4c09",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 710.30305288562772,
        "Y": 391.71110594415745
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ExportToExcel",
        "Id": "0025ba9732fd4f54944fef01d977a384",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 3616.3543128522779,
        "Y": 497.95272714376591
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ImportExcel",
        "Id": "d6585e237b33456a99f11479561ff9e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3965.0820463441769,
        "Y": 208.81338379240219
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Id",
        "Id": "6f9f224f01204cbbacd5e17949bd1ec8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 985.95402031594335,
        "Y": 204.96052829169525
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "08f6618e31bf43418c68ab2c32dbb69f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 937.21959956472415,
        "Y": 629.64002194516843
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ab73b42d4dcd452cb7c3654cbed516bf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 654.10497946413386,
        "Y": 728.67235415400523
      },
      {
        "ShowGeometry": true,
        "Name": "List.Map",
        "Id": "aa6ca9a3da54421c8e76b49824c0afe9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1241.3523867791907,
        "Y": 506.34294604741171
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "ae0249df912243639e9d7c6ef0d2331e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1773.75267798296,
        "Y": 536.087838699387
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "337f8b58310d45a0913e4df28e915a33",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1272.2203173514965,
        "Y": 666.75126000631428
      },
      {
        "ShowGeometry": true,
        "Name": "List.Chop",
        "Id": "4d80950deae44f6e818e5e7a817990f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2081.9539556053946,
        "Y": 612.14905415660348
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "0ab55804cd5f4515bd4e8a83b7abd260",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1814.3044798314002,
        "Y": 708.25431371990987
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "44ae243266ae4fe18831777d9af5e9da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2356.1945839926129,
        "Y": 515.38442236115111
      },
      {
        "ShowGeometry": true,
        "Name": "List.AddItemToFront",
        "Id": "ef8b98a071bc4a709c33fbd6beda8590",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2564.9893031128622,
        "Y": 366.78645372785513
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "91992b58f09346d39a4ab9b00af51c1e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2825.6662666460898,
        "Y": 372.56715716462344
      },
      {
        "ShowGeometry": true,
        "Name": "List.AddItemToFront",
        "Id": "c6b72fc202df40e7a5586c21d02eb717",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2293.7883402000152,
        "Y": 881.97718696272443
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "c847e759607d46a9813261939d71745c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2186.092854248122,
        "Y": 882.41731730958645
      },
      {
        "ShowGeometry": true,
        "Name": "List.AddItemToFront",
        "Id": "7c6ec32ddb324d058aa8373c927df320",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3095.3409141578418,
        "Y": 606.772158613491
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "fd19fde774b746f0bda50958ef12c66f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3191.914616719816,
        "Y": 213.71929791029828
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7d9ae77b5c9d45afaadeb61f671e5bdc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3190.2075037904574,
        "Y": 300.16880336135392
      },
      {
        "ShowGeometry": true,
        "Name": "File From Path",
        "Id": "6f9cacfd0c044b2786605662f9810f85",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3676.5980939203837,
        "Y": 205.87853229457971
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "76556636873c445cad4fb7cbd43cf14a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4235.7373463679969,
        "Y": 209.12476923903404
      },
      {
        "ShowGeometry": true,
        "Name": "List.DropItems",
        "Id": "1b840986f039487482b0a3fa7090aafc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4451.585034037983,
        "Y": 208.92863507309215
      },
      {
        "ShowGeometry": true,
        "Name": "List.IndexOf",
        "Id": "f7d86f37fd8f443aab3ad52cde0582ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4904.3939741601025,
        "Y": 43.155170717500425
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "099086cd6a4041d580933affdeca1001",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4652.8858146164284,
        "Y": 43.437758838529106
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "b0812fb202294695b97e3d3dfb6beec4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5173.3588242223032,
        "Y": -50.121518318532651
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "2ffca105948a472aaf3e84627a61a157",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5504.5811648119934,
        "Y": 427.24191893074942
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b18def8bb4114a698d1e8f9e6f24736d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4334.8864333498223,
        "Y": 321.902925146091
      },
      {
        "ShowGeometry": true,
        "Name": "Values",
        "Id": "5856b7f28bdc4c34bb1de24b5839ed87",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4673.1652596002741,
        "Y": 372.04325490440436
      },
      {
        "ShowGeometry": true,
        "Name": "List.Combine",
        "Id": "def7f65895a44dd681eb7e471a72debb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5857.6935432114351,
        "Y": 582.01801252704377
      },
      {
        "ShowGeometry": true,
        "Name": "Parameter names",
        "Id": "3c2bb97c2f3f41e593e5c9c160bd6ffb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4674.8175120657788,
        "Y": 542.36747531416927
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Parameters",
        "Id": "08026ad802e84d49988cfcff7aa94426",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1209.8853037674382,
        "Y": 115.64813472977298
      },
      {
        "ShowGeometry": true,
        "Name": "Get all elements",
        "Id": "0737fd5c32804afe8ec22a56251a693b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 491.80350965481045,
        "Y": 2010.6612453708781
      },
      {
        "ShowGeometry": true,
        "Name": "Get Parameter Values ",
        "Id": "cd8a951e723f45a09a3f30ba51a89b3d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 903.76737674704623,
        "Y": 2134.9693472123035
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "ed7a88451e3e4bec883164cead104ed2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1607.80242665762,
        "Y": 666.069557149758
      },
      {
        "ShowGeometry": true,
        "Name": "==",
        "Id": "db19e68b2fa74235befb27538dd8f212",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1441.2653094468,
        "Y": 538.386207691464
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ExportToExcel",
        "Id": "41f4f42bcba4420393862386205cc590",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 1976.8283856022395,
        "Y": 2264.5024697598606
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0b943a6916254375b40da77c2cf8eff2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1582.0822467619125,
        "Y": 2081.7004723155278
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "3e86a867d11d47ddb16d8dcd3db2f422",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1444.2013202434364,
        "Y": 1942.7951686572569
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ImportExcel",
        "Id": "ed6e410e6ade4cecaddf351e6f7890f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2277.0144129457503,
        "Y": 1950.0376019205262
      },
      {
        "ShowGeometry": true,
        "Name": "File From Path",
        "Id": "f170fa64eeb34ecd91d1acf19a205954",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1990.2075600748381,
        "Y": 1947.4788918027657
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a44d971d54fb4f0f9d7eb2e195947f88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2645.307662924612,
        "Y": 2202.105527602248
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "139d36d070374bc8bbeb403d3cc07746",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2834.0405088281022,
        "Y": 2411.7556074818931
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "c5b5fdd9ae2442819b67c145137ab654",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3345.6775672951289,
        "Y": 2302.9260948412516
      }
    ],
    "Annotations": [
      {
        "Id": "754cf6d48eab4dc5a70e9aeafec2c79f",
        "Title": "Select Rooms from ID",
        "Nodes": [
          "76556636873c445cad4fb7cbd43cf14a",
          "1b840986f039487482b0a3fa7090aafc",
          "f7d86f37fd8f443aab3ad52cde0582ba",
          "099086cd6a4041d580933affdeca1001",
          "b0812fb202294695b97e3d3dfb6beec4"
        ],
        "Left": 4225.7373463679969,
        "Top": -103.12151831853265,
        "Width": 1136.6214778543062,
        "Height": 431.0501533916248,
        "FontSize": 36.0,
        "InitialTop": -50.121518318532651,
        "InitialHeight": 482.20532995214575,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3b874afecbc245a1b274b578fe241198",
        "Title": "CodeBlocks",
        "Nodes": [
          "0737fd5c32804afe8ec22a56251a693b",
          "cd8a951e723f45a09a3f30ba51a89b3d",
          "41f4f42bcba4420393862386205cc590",
          "0b943a6916254375b40da77c2cf8eff2",
          "3e86a867d11d47ddb16d8dcd3db2f422",
          "ed6e410e6ade4cecaddf351e6f7890f6",
          "f170fa64eeb34ecd91d1acf19a205954",
          "a44d971d54fb4f0f9d7eb2e195947f88",
          "139d36d070374bc8bbeb403d3cc07746",
          "c5b5fdd9ae2442819b67c145137ab654"
        ],
        "Left": 481.80350965481045,
        "Top": 1889.7951686572569,
        "Width": 3083.8740576403184,
        "Height": 818.31035894499109,
        "FontSize": 36.0,
        "InitialTop": 1942.7951686572569,
        "InitialHeight": 707.31035894499109,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -144.02757605572418,
    "Y": 57.974589290610368,
    "Zoom": 0.35030487319130754
  }
}